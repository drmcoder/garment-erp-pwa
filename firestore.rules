rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Development rules - allow all reads/writes for now
    // TODO: Implement proper security rules in production
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Production rules (commented out for development)
    /*
    // Users can only access their own data
    match /operators/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /supervisors/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /management/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Bundles - operators can read assigned bundles, supervisors can manage
    match /bundles/{bundleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (resource.data.assignedOperator == request.auth.uid ||
         get(/databases/$(database)/documents/supervisors/$(request.auth.uid)) != null);
    }
    
    // Notifications - users can read their own notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null && resource.data.targetUser == request.auth.uid;
      allow write: if request.auth != null;
    }
    
    // Production stats - read only for operators, read/write for supervisors and management
    match /production_stats/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/supervisors/$(request.auth.uid)) != null ||
         get(/databases/$(database)/documents/management/$(request.auth.uid)) != null);
    }
    
    // Quality issues - can be created by operators, managed by supervisors
    match /quality_issues/{issueId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (get(/databases/$(database)/documents/supervisors/$(request.auth.uid)) != null ||
         get(/databases/$(database)/documents/management/$(request.auth.uid)) != null);
    }
    
    // Configuration data - read only for most users, write for management
    match /size_configs/{configId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/management/$(request.auth.uid)) != null;
    }
    
    match /machine_configs/{configId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/management/$(request.auth.uid)) != null;
    }
    
    // Line status - read for operators, write for supervisors
    match /line_status/{lineId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/supervisors/$(request.auth.uid)) != null ||
         get(/databases/$(database)/documents/management/$(request.auth.uid)) != null);
    }
    
    // Wage records - read own records, write for system
    match /wage_records/{recordId} {
      allow read: if request.auth != null && resource.data.operatorId == request.auth.uid;
      allow write: if request.auth != null;
    }
    */
  }
}